// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// Built with zod-codegen@0.1.0-alpha.1
// Latest edit: Sat, 06 Jan 2024 03:33:13 GMT
// Source file: ./samples/swagger-petstore.yaml
// API: Swagger Petstore - OpenAPI 3.0 v1.0.11

// Imports
import axios, { type AxiosResponse } from 'axios';
import z from 'zod';

// Components schemas
const Order = z.object({
    id: z.number().int().optional(),
    petId: z.number().int().optional(),
    quantity: z.number().int().optional(),
    shipDate: z.string().optional(),
    status: z.string().optional(),
    complete: z.boolean().optional()
});
const Customer = z.object({
    id: z.number().int().optional(),
    username: z.string().optional(),
    address: z.array(z.unknown()).optional()
});
const Address = z.object({
    street: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    zip: z.string().optional()
});
const Category = z.object({
    id: z.number().int().optional(),
    name: z.string().optional()
});
const User = z.object({
    id: z.number().int().optional(),
    username: z.string().optional(),
    firstName: z.string().optional(),
    lastName: z.string().optional(),
    email: z.string().optional(),
    password: z.string().optional(),
    phone: z.string().optional(),
    userStatus: z.number().int().optional()
});
const Tag = z.object({
    id: z.number().int().optional(),
    name: z.string().optional()
});
const Pet = z.object({
    id: z.number().int().optional(),
    name: z.string(),
    category: z.unknown().optional(),
    photoUrls: z.array(z.string()),
    tags: z.array(z.unknown()).optional(),
    status: z.string().optional()
});
const ApiResponse = z.object({
    code: z.number().int().optional(),
    type: z.string().optional(),
    message: z.string().optional()
});

// Default base URL
const defaultBaseUrl = 'https://petstore3.swagger.io/api/v3';

// Client class
export class SwaggerPetstoreOpenAPI30 {
    readonly #baseUrl: string;
    constructor(baseUrl: string = defaultBaseUrl) {
        this.#baseUrl = baseUrl;
    }
    async #makeApiRequest<T>(method: string, path: string, data?: unknown): Promise<AxiosResponse<T>> {
        return axios<T>({
            method,
            url: `${this.#baseUrl}${path}`,
            data,
            headers: {
                'Content-Type': 'application/json'
            }
        });
    }
}
