openapi: 3.0.0
info:
  title: FastAPI
  version: '1.0'
paths:
  /api/v1/conversations/:
    get:
      tags:
        - conversations
      summary: Get Conversations
      operationId: get_conversations_api_v1_conversations__get
      parameters:
        - required: false
          schema:
            type: integer
            title: Conversation Id
          name: conversation_id
          in: query
        - required: false
          schema:
            type: integer
            title: Df Account Id
          name: df_account_id
          in: query
        - required: false
          schema:
            type: integer
            title: User Id
          name: user_id
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/ChannelType'
          name: channel_type
          in: query
        - required: false
          schema:
            type: string
            title: External Id
          name: external_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ConversationResponse'
                  - items:
                      $ref: '#/components/schemas/ConversationResponse'
                    type: array
                title: Response Get Conversations Api V1 Conversations  Get
        '404':
          description: Conversation route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - conversations
      summary: Create Conversation
      operationId: create_conversation_api_v1_conversations__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
        '404':
          description: Conversation route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/conversations/{conversation_id}:
    put:
      tags:
        - conversations
      summary: Update Conversation Route
      operationId: update_conversation_route_api_v1_conversations__conversation_id__put
      parameters:
        - required: true
          schema:
            type: integer
            title: Conversation Id
          name: conversation_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationUpdate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
        '404':
          description: Conversation route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - conversations
      summary: Delete Conversation
      operationId: delete_conversation_api_v1_conversations__conversation_id__delete
      parameters:
        - required: true
          schema:
            type: integer
            title: Conversation Id
          name: conversation_id
          in: path
      responses:
        '204':
          description: Successful Response
        '404':
          description: Conversation route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/df_accounts/:
    get:
      tags:
        - df_accounts
      summary: Get Df Account
      operationId: get_df_account_api_v1_df_accounts__get
      parameters:
        - required: false
          schema:
            type: integer
            title: Df Account Id
          name: df_account_id
          in: query
        - required: false
          schema:
            type: string
            title: Phone Number
          name: phone_number
          in: query
        - required: false
          schema:
            type: string
            title: Df Case Number
          name: df_case_number
          in: query
        - required: false
          schema:
            type: string
            title: Email
          name: email
          in: query
        - required: false
          schema:
            type: string
            title: Emails
          name: emails
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - items:
                      $ref: '#/components/schemas/DFAccountResponse'
                    type: array
                  - $ref: '#/components/schemas/DFAccountResponse'
                title: Response Get Df Account Api V1 Df Accounts  Get
        '404':
          description: DF Account route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/generated_messages/:
    get:
      tags:
        - generated_messages
      summary: Get Generated Message
      operationId: get_generated_message_api_v1_generated_messages__get
      parameters:
        - required: false
          schema:
            type: integer
            title: Generated Message Id
          name: generated_message_id
          in: query
        - required: false
          schema:
            type: integer
            title: Conversation Id
          name: conversation_id
          in: query
        - required: false
          schema:
            type: integer
            title: Df Account Id
          name: df_account_id
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/GeneratedMessageType'
            default: 1
          name: type
          in: query
        - required: false
          schema:
            type: boolean
            title: With Feedback
            default: true
          name: with_feedback
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/GeneratedMessageResponse'
                  - items:
                      $ref: '#/components/schemas/GeneratedMessageResponse'
                    type: array
                title: Response Get Generated Message Api V1 Generated Messages  Get
        '404':
          description: generated_message route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    put:
      tags:
        - generated_messages
      summary: Update Generated Message
      operationId: update_generated_message_api_v1_generated_messages__put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneratedMessageUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedMessageResponse'
        '404':
          description: generated_message route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - generated_messages
      summary: Create Generated Message
      operationId: create_generated_message_api_v1_generated_messages__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneratedMessageCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/GeneratedMessageResponse'
                  - $ref: '#/components/schemas/TestGeneratedMessageResponse'
                title: Response Create Generated Message Api V1 Generated Messages  Post
        '404':
          description: generated_message route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - generated_messages
      summary: Delete Generated Message
      operationId: delete_generated_message_api_v1_generated_messages__delete
      parameters:
        - required: true
          schema:
            type: integer
            title: Generated Message Id
          name: generated_message_id
          in: query
      responses:
        '204':
          description: Successful Response
        '404':
          description: generated_message route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/messages/:
    get:
      tags:
        - messages
      summary: Get Messages
      operationId: get_messages_api_v1_messages__get
      parameters:
        - required: false
          schema:
            type: integer
            title: Message Id
          name: message_id
          in: query
        - required: false
          schema:
            type: integer
            title: Conversation Id
          name: conversation_id
          in: query
        - required: false
          schema:
            type: boolean
            title: With Feedback
            default: true
          name: with_feedback
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/MessageResponse'
                  - items:
                      $ref: '#/components/schemas/MessageResponse'
                    type: array
                title: Response Get Messages Api V1 Messages  Get
        '404':
          description: message route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    put:
      tags:
        - messages
      summary: Update Messages
      operationId: update_messages_api_v1_messages__put
      parameters:
        - required: true
          schema:
            type: integer
            title: Message Id
          name: message_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '404':
          description: message route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - messages
      summary: Create Messages
      operationId: create_messages_api_v1_messages__post
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/MessageCreate'
              type: array
              title: Messages In
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/MessageResponse'
                  - items:
                      $ref: '#/components/schemas/MessageResponse'
                    type: array
                title: Response Create Messages Api V1 Messages  Post
        '404':
          description: message route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/messages/{message_id}:
    delete:
      tags:
        - messages
      summary: Delete Messages
      operationId: delete_messages_api_v1_messages__message_id__delete
      parameters:
        - required: true
          schema:
            type: integer
            title: Message Id
          name: message_id
          in: path
      responses:
        '204':
          description: Successful Response
        '404':
          description: message route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/users/:
    get:
      tags:
        - users
      summary: Read User
      description: Fetch the current logged in user.
      operationId: read_user_api_v1_users__get
      parameters:
        - required: false
          schema:
            type: boolean
            title: List All
            default: false
          name: list_all
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/User'
                  - items:
                      $ref: '#/components/schemas/User'
                    type: array
                title: Response Read User Api V1 Users  Get
        '404':
          description: users route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    put:
      tags:
        - users
      summary: Update User
      description: Update User account information for logged in users.
      operationId: update_user_api_v1_users__put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: users route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - users
      summary: Create User
      description: Create new user without the need to be logged in.
      operationId: create_user_api_v1_users__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: users route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/verify:
    post:
      tags:
        - users
      summary: Verify User
      operationId: verify_user_api_v1_users_verify_post
      parameters:
        - required: true
          schema:
            type: string
            title: Token
          name: token
          in: query
      responses:
        '204':
          description: Successful Response
        '404':
          description: users route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/reset:
    post:
      tags:
        - users
      summary: Reset Password
      description: Trigger a password reset request for the User. No data will be returned.
      operationId: reset_password_api_v1_users_reset_post
      parameters:
        - required: true
          schema:
            type: string
            title: Email
          name: email
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Reset Password Api V1 Users Reset Post
        '404':
          description: users route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/set_password:
    put:
      tags:
        - users
      summary: Set User Password
      description: Setting the User's new password with a password reset token
      operationId: set_user_password_api_v1_users_set_password_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSetPasswordWithToken'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Set User Password Api V1 Users Set Password Put
        '404':
          description: users route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/conversation_states/:
    get:
      tags:
        - conversation_states
      summary: Get Conversation State Logs
      operationId: get_conversation_state_logs_api_v1_conversation_states__get
      parameters:
        - required: false
          schema:
            type: integer
            title: Conversation Id
          name: conversation_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConversationStateLogResponse'
                type: array
                title: Response Get Conversation State Logs Api V1 Conversation States  Get
        '404':
          description: generated_message route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - conversation_states
      summary: Create Conversation State Log Route
      operationId: create_conversation_state_log_route_api_v1_conversation_states__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationStateLogCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationStateLogResponse'
        '404':
          description: generated_message route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/models/:
    get:
      tags:
        - models
      summary: Get Models
      operationId: get_models_api_v1_models__get
      parameters:
        - required: false
          schema:
            type: integer
            title: Default Only
            default: 0
          name: default_only
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelSelectorResponse'
                type: array
                title: Response Get Models Api V1 Models  Get
        '404':
          description: models route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/email_messages/:
    get:
      tags:
        - email_messages
      summary: Get Email Messages
      operationId: get_email_messages_api_v1_email_messages__get
      parameters:
        - required: false
          schema:
            type: integer
            title: Message Id
          name: message_id
          in: query
        - required: false
          schema:
            type: integer
            title: Conversation Id
          name: conversation_id
          in: query
        - required: false
          schema:
            type: boolean
            title: With Feedback
            default: true
          name: with_feedback
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/EmailMessageResponse'
                  - items:
                      $ref: '#/components/schemas/EmailMessageResponse'
                    type: array
                title: Response Get Email Messages Api V1 Email Messages  Get
        '404':
          description: email message route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    put:
      tags:
        - email_messages
      summary: Update Messages
      operationId: update_messages_api_v1_email_messages__put
      parameters:
        - required: true
          schema:
            type: integer
            title: Message Id
          name: message_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailMessageUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailMessageResponse'
        '404':
          description: email message route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - email_messages
      summary: Create Email Messages
      operationId: create_email_messages_api_v1_email_messages__post
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/EmailMessageCreate'
              type: array
              title: Messages In
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/EmailMessageResponse'
                  - items:
                      $ref: '#/components/schemas/EmailMessageResponse'
                    type: array
                title: Response Create Email Messages Api V1 Email Messages  Post
        '404':
          description: email message route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/email_messages/{message_id}:
    delete:
      tags:
        - email_messages
      summary: Delete Messages
      operationId: delete_messages_api_v1_email_messages__message_id__delete
      parameters:
        - required: true
          schema:
            type: integer
            title: Message Id
          name: message_id
          in: path
      responses:
        '204':
          description: Successful Response
        '404':
          description: email message route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/customers/:
    get:
      tags:
        - customers
      summary: Read Customer
      description: Fetch the current logged in user's Customer data.
      operationId: read_customer_api_v1_customers__get
      parameters:
        - required: false
          schema:
            type: boolean
            title: List All
            default: false
          name: list_all
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/CustomerResponse'
                  - items:
                      $ref: '#/components/schemas/CustomerResponse'
                    type: array
                title: Response Read Customer Api V1 Customers  Get
        '404':
          description: customers route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v2/agent_flows/:
    get:
      tags:
        - agent_flows
      summary: Get Agent Flow
      operationId: get_agent_flow_api_v2_agent_flows__get
      parameters:
        - required: false
          schema:
            type: integer
            title: Flow Id
          name: flow_id
          in: query
        - required: false
          schema:
            type: string
            title: Name
          name: name
          in: query
        - required: false
          schema:
            type: integer
            title: Ver
          name: ver
          in: query
        - required: false
          schema:
            type: integer
            title: Default Only
            default: 0
          name: default_only
          in: query
        - required: false
          schema:
            type: integer
            title: Flow Type
            default: 1
          name: flow_type
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AgentFlowV2Response'
                  - items:
                      $ref: '#/components/schemas/AgentFlowV2Response'
                    type: array
                title: Response Get Agent Flow Api V2 Agent Flows  Get
        '404':
          description: Agent flow route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - agent_flows
      summary: Create Agent Flows
      operationId: create_agent_flows_api_v2_agent_flows__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentFlowV2Create'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentFlowV2Response'
        '404':
          description: Agent flow route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - agent_flows
      summary: Delete Agent Flow
      operationId: delete_agent_flow_api_v2_agent_flows__delete
      parameters:
        - required: true
          schema:
            type: integer
            title: Flow Id
          name: flow_id
          in: query
      responses:
        '204':
          description: Successful Response
        '404':
          description: Agent flow route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v2/prompts/:
    get:
      tags:
        - prompts
      summary: Get Prompt
      operationId: get_prompt_api_v2_prompts__get
      parameters:
        - required: false
          schema:
            type: integer
            title: Id
          name: id
          in: query
        - required: false
          schema:
            type: string
            title: Name
          name: name
          in: query
        - required: false
          schema:
            type: integer
            title: Ver
          name: ver
          in: query
        - required: false
          schema:
            type: integer
            title: Df Account Id
          name: df_account_id
          in: query
        - required: false
          schema:
            type: integer
            title: Flow Id
          name: flow_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PromptResponse'
                  - items:
                      $ref: '#/components/schemas/NonStagePromptResponse'
                    type: array
                title: Response Get Prompt Api V2 Prompts  Get
        '404':
          description: Prompts route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - prompts
      summary: Create Prompt
      operationId: create_prompt_api_v2_prompts__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptResponse'
        '404':
          description: Prompts route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - prompts
      summary: Delete Prompt
      operationId: delete_prompt_api_v2_prompts__delete
      parameters:
        - required: true
          schema:
            type: integer
            title: Id
          name: id
          in: query
      responses:
        '204':
          description: Successful Response
        '404':
          description: Prompts route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v2/custom_workflow_buttons/:
    get:
      tags:
        - custom_workflow_buttons
      summary: Get Custom Workflow Buttons
      operationId: get_custom_workflow_buttons_api_v2_custom_workflow_buttons__get
      parameters:
        - required: true
          schema:
            type: integer
            title: Flow Id
          name: flow_id
          in: query
        - required: false
          schema:
            type: integer
            title: Stage Id
          name: stage_id
          in: query
        - required: false
          schema:
            type: string
            title: Stage Name
          name: stage_name
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomWorkflowButtonResponse'
                type: array
                title: Response Get Custom Workflow Buttons Api V2 Custom Workflow Buttons  Get
        '404':
          description: Custom workflow buttons route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v2/stages/:
    get:
      tags:
        - stages
      summary: Get Stages
      operationId: get_stages_api_v2_stages__get
      parameters:
        - required: false
          schema:
            type: integer
            title: Stage Id
          name: stage_id
          in: query
        - required: false
          schema:
            type: integer
            title: Flow Id
          name: flow_id
          in: query
        - required: false
          schema:
            type: boolean
            title: Is Label
            default: false
          name: is_label
          in: query
        - required: false
          schema:
            type: boolean
            title: Is Selectable
            default: false
          name: is_selectable
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/StageResponse'
                  - $ref: '#/components/schemas/StageLabelResponse'
                  - items:
                      $ref: '#/components/schemas/StageResponse'
                    type: array
                  - items:
                      $ref: '#/components/schemas/StageLabelResponse'
                    type: array
                title: Response Get Stages Api V2 Stages  Get
        '404':
          description: stages route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    put:
      tags:
        - stages
      summary: Update Stages
      operationId: update_stages_api_v2_stages__put
      parameters:
        - required: true
          schema:
            type: integer
            title: Stage Id
          name: stage_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StageUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageResponse'
        '404':
          description: stages route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - stages
      summary: Create Stages
      operationId: create_stages_api_v2_stages__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StageCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageResponse'
        '404':
          description: stages route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - stages
      summary: Delete Stage
      operationId: delete_stage_api_v2_stages__delete
      parameters:
        - required: true
          schema:
            type: integer
            title: Stage Id
          name: stage_id
          in: query
      responses:
        '204':
          description: Successful Response
        '404':
          description: stages route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v2/ucc_flow/providers:
    post:
      tags:
        - ucc_flow
      summary: Providers
      operationId: providers_api_v2_ucc_flow_providers_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_providers_api_v2_ucc_flow_providers_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UCCProviderResponse'
        '404':
          description: UCC flow route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v2/ucc_flow/:
    get:
      tags:
        - ucc_flow
      summary: Ucc Parser
      operationId: ucc_parser_api_v2_ucc_flow__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: UCC flow route not found
    post:
      tags:
        - ucc_flow
      summary: Process
      description: Processes an uploaded file, performs OCR, extracts sensitive data, detect the document type and data-mask the source if needed in order to complete a UCC file.
      operationId: process_api_v2_ucc_flow__post
      parameters:
        - required: false
          schema:
            type: boolean
            title: Use Crc32
            default: false
          name: use_crc32
          in: query
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_process_api_v2_ucc_flow__post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UCCResponse'
        '404':
          description: UCC flow route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v2/documents/sign-urls:
    post:
      tags:
        - documents
      summary: Create Get Urls
      description: |-
        Create pre-signed URLs for the given list of files.

        This endpoint generates pre-signed URLs for retrieving files from a S3 bucket. Each file
        in the request will have its own unique URL and required fields.
      operationId: create_get_urls_api_v2_documents_sign_urls_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateSignedUrlRequest'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateSignedUrlResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v2/documents/upload-urls:
    post:
      tags:
        - documents
      summary: Create Upload Urls
      description: |-
        Create pre-signed upload URLs for the given list of files.

        This endpoint generates pre-signed URLs for uploading files to an S3 bucket. Each file
        in the request will have its own unique URL and required fields for uploading.
      operationId: create_upload_urls_api_v2_documents_upload_urls_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUploadUrlRequest'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateUploadUrlResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v2/documents/lambda-ocr:
    post:
      tags:
        - documents
      summary: Lambda Ocr
      description: |-
        Perform Optical Character Recognition (OCR) on a PDF file.

        This endpoint processes a PDF file specified by the S3 URI in the request. It performs
        OCR on each page of the PDF, extracting text content. The function handles caching of
        both the original file and the OCR results to improve performance on subsequent requests
        for the same document.
      operationId: lambda_ocr_api_v2_documents_lambda_ocr_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LambdaOcrDocumentRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LambdaOcrDocumentResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v2/documents/ucc:
    post:
      tags:
        - documents
      summary: Ucc
      operationId: ucc_api_v2_documents_ucc_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UccDocumentRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UccDocumentResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v2/documents/providers:
    post:
      tags:
        - documents
      summary: Providers
      operationId: providers_api_v2_documents_providers_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvidersDocumentRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvidersDocumentResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v2/documents/ocr:
    post:
      tags:
        - documents
      summary: Ocr
      operationId: ocr_api_v2_documents_ocr_post
      parameters:
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OcrDocumentMode'
            default: saris
          name: mode
          in: query
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_ocr_api_v2_documents_ocr_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OcrDocumentResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v3/tasks/:
    get:
      tags:
        - tasks
      summary: Get Tasks
      operationId: get_tasks_api_v3_tasks__get
      parameters:
        - required: false
          schema:
            type: integer
            title: Task Id
          name: task_id
          in: query
        - required: false
          schema:
            type: integer
            title: User Id
          name: user_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/TaskResponse'
                  - items:
                      $ref: '#/components/schemas/TaskResponse'
                    type: array
                title: Response Get Tasks Api V3 Tasks  Get
        '404':
          description: Task route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - tasks
      summary: Create Task
      operationId: create_task_api_v3_tasks__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '404':
          description: Task route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/auth/login:
    post:
      tags:
        - auth
      summary: Login
      description: Get the JWT for a user with data from OAuth2 request form body.
      operationId: login_api_auth_login_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_api_auth_login_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Login Api Auth Login Post
        '404':
          description: Authentication route not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - auth
      summary: Logout
      description: Logs out a user by invalidating his session.
      operationId: logout_api_auth_login_delete
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Authentication route not found
      security:
        - OAuth2PasswordBearer: []
  /api/health:
    get:
      tags:
        - health
      summary: Health Check
      description: Get the current API health.
      operationId: health_check_api_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
components:
  schemas:
    AccessLevel:
      type: integer
      enum:
        - -1
        - 0
        - 1
        - 2
      title: AccessLevel
      description: An enumeration.
    AgentFlowV2Create:
      properties:
        name:
          type: string
          title: Name
        data:
          additionalProperties:
            $ref: '#/components/schemas/StageData'
          type: object
          title: Data
        status:
          type: integer
          title: Status
        ver:
          type: integer
          title: Ver
        customer_id:
          type: integer
          title: Customer Id
        flow_type:
          $ref: '#/components/schemas/FlowType'
        exec_mode:
          $ref: '#/components/schemas/ExecMode'
      type: object
      required:
        - name
        - data
        - status
      title: AgentFlowV2Create
    AgentFlowV2Response:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        ver:
          type: integer
          title: Ver
        data:
          additionalProperties:
            $ref: '#/components/schemas/StageData'
          type: object
          title: Data
        status:
          type: integer
          title: Status
        customer_id:
          type: integer
          title: Customer Id
        flow_type:
          $ref: '#/components/schemas/FlowType'
        exec_mode:
          $ref: '#/components/schemas/ExecMode'
        time_created:
          type: integer
          title: Time Created
      type: object
      required:
        - id
        - name
        - ver
        - data
        - status
        - customer_id
        - flow_type
        - exec_mode
      title: AgentFlowV2Response
    Body_login_api_auth_login_post:
      properties:
        grant_type:
          type: string
          pattern: password
          title: Grant Type
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        scope:
          type: string
          title: Scope
          default: ''
        client_id:
          type: string
          title: Client Id
        client_secret:
          type: string
          title: Client Secret
      type: object
      required:
        - username
        - password
      title: Body_login_api_auth_login_post
    Body_ocr_api_v2_documents_ocr_post:
      properties:
        file:
          type: string
          format: binary
          title: File
      type: object
      required:
        - file
      title: Body_ocr_api_v2_documents_ocr_post
    Body_process_api_v2_ucc_flow__post:
      properties:
        file:
          type: string
          format: binary
          title: File
      type: object
      required:
        - file
      title: Body_process_api_v2_ucc_flow__post
    Body_providers_api_v2_ucc_flow_providers_post:
      properties:
        files:
          items:
            type: string
            format: binary
          type: array
          title: Files
        merchant_name:
          type: string
          title: Merchant Name
        value:
          type: string
          title: Value
        client_name:
          type: string
          title: Client Name
        df_case_number:
          type: string
          title: Df Case Number
        merchant_address:
          type: string
          title: Merchant Address
      type: object
      required:
        - files
        - merchant_name
        - value
        - client_name
        - df_case_number
        - merchant_address
      title: Body_providers_api_v2_ucc_flow_providers_post
    ChannelType:
      type: integer
      enum:
        - 0
        - 1
      title: ChannelType
      description: An enumeration.
    ConversationCreate:
      properties:
        df_account_id:
          type: integer
          title: Df Account Id
        ml_model:
          type: integer
          title: Ml Model
        flow_id:
          type: integer
          title: Flow Id
        duplicate:
          type: integer
          title: Duplicate
          default: 0
        channel_type:
          allOf:
            - $ref: '#/components/schemas/ChannelType'
          default: 0
        external_id:
          type: string
          title: External Id
      type: object
      required:
        - df_account_id
      title: ConversationCreate
    ConversationResponse:
      properties:
        id:
          type: integer
          title: Id
        user_id:
          type: integer
          title: User Id
        df_account_id:
          type: integer
          title: Df Account Id
        flow_id:
          type: integer
          title: Flow Id
        ml_model:
          type: integer
          title: Ml Model
        current_stage_info:
          $ref: '#/components/schemas/CurrentStageInfo'
        num_input_tokens_used:
          type: integer
          title: Num Input Tokens Used
        num_output_tokens_used:
          type: integer
          title: Num Output Tokens Used
        num_messages:
          type: integer
          title: Num Messages
        duplicate:
          type: integer
          title: Duplicate
        channel_type:
          $ref: '#/components/schemas/ChannelType'
        external_id:
          type: string
          title: External Id
        last_message_time:
          type: integer
          title: Last Message Time
        time_created:
          type: integer
          title: Time Created
      type: object
      required:
        - id
        - user_id
        - df_account_id
        - flow_id
        - current_stage_info
        - num_messages
        - channel_type
      title: ConversationResponse
    ConversationStateLogCreate:
      properties:
        conversation_id:
          type: integer
          title: Conversation Id
        stage_info:
          $ref: '#/components/schemas/CurrentStageInfo'
        message_id:
          type: integer
          title: Message Id
          default: 0
        transition_reason:
          $ref: '#/components/schemas/TransitionReason'
      type: object
      required:
        - conversation_id
        - stage_info
        - transition_reason
      title: ConversationStateLogCreate
    ConversationStateLogResponse:
      properties:
        id:
          type: integer
          title: Id
        conversation_id:
          type: integer
          title: Conversation Id
        stage_info:
          $ref: '#/components/schemas/CurrentStageInfo'
        message_id:
          type: integer
          title: Message Id
          default: 0
        transition_reason:
          $ref: '#/components/schemas/TransitionReason'
        time_created:
          type: integer
          title: Time Created
      type: object
      required:
        - id
        - conversation_id
        - stage_info
        - transition_reason
      title: ConversationStateLogResponse
    ConversationUpdate:
      properties:
        ml_model:
          type: integer
          title: Ml Model
        flow_id:
          type: integer
          title: Flow Id
        external_id:
          type: string
          title: External Id
        current_stage_info:
          $ref: '#/components/schemas/CurrentStageInfo'
        num_input_tokens_used:
          type: integer
          title: Num Input Tokens Used
        num_output_tokens_used:
          type: integer
          title: Num Output Tokens Used
        last_message_time:
          type: integer
          title: Last Message Time
        transition_reason:
          allOf:
            - $ref: '#/components/schemas/TransitionReason'
          default: manual_transition
      type: object
      title: ConversationUpdate
    CreatePresignedPostFieldsResponse:
      properties:
        key:
          type: string
          title: Key
        AWSAccessKeyId:
          type: string
          title: Awsaccesskeyid
        policy:
          type: string
          title: Policy
        signature:
          type: string
          title: Signature
      type: object
      required:
        - key
        - AWSAccessKeyId
        - policy
        - signature
      title: CreatePresignedPostFieldsResponse
    CurrentStageInfo:
      properties:
        name:
          type: string
          title: Name
        id:
          type: integer
          title: Id
        count:
          type: integer
          title: Count
          default: 0
      type: object
      title: CurrentStageInfo
    CustomWorkflowButtonResponse:
      properties:
        name:
          type: string
          title: Name
      type: object
      required:
        - name
      title: CustomWorkflowButtonResponse
    CustomerID:
      type: integer
      enum:
        - 1
        - 3
      title: CustomerID
      description: An enumeration.
    CustomerResponse:
      properties:
        id:
          $ref: '#/components/schemas/CustomerID'
        name:
          type: string
          title: Name
        email_domain:
          type: string
          title: Email Domain
      type: object
      required:
        - id
        - name
        - email_domain
      title: CustomerResponse
    DFAccountResponse:
      properties:
        id:
          type: integer
          title: Id
        df_internal_id:
          type: string
          title: Df Internal Id
        df_case_number:
          type: string
          title: Df Case Number
        name:
          type: string
          title: Name
        client_name:
          type: string
          title: Client Name
        debtor_company_name:
          type: string
          title: Debtor Company Name
        debtor_contact_name:
          type: string
          title: Debtor Contact Name
        collector_user_name:
          type: string
          title: Collector User Name
        original_claim_amount_cent:
          type: integer
          title: Original Claim Amount Cent
        total_paid_amount_cent:
          type: integer
          title: Total Paid Amount Cent
        current_balance_due_cent:
          type: integer
          title: Current Balance Due Cent
        dcri_score:
          type: integer
          title: Dcri Score
        sif_threshold_pct:
          type: integer
          title: Sif Threshold Pct
        sif_timeframe_days:
          type: integer
          title: Sif Timeframe Days
        sif_additional_params:
          type: string
          title: Sif Additional Params
        last_work_date:
          type: string
          format: date-time
          title: Last Work Date
        next_scheduled_payment_amount_cent:
          type: integer
          title: Next Scheduled Payment Amount Cent
        next_scheduled_payment_date:
          type: string
          format: date-time
          title: Next Scheduled Payment Date
        current_status:
          type: string
          title: Current Status
        is_real:
          type: boolean
          title: Is Real
        phone_numbers:
          items: {}
          type: array
          title: Phone Numbers
          default: []
        time_received:
          type: integer
          title: Time Received
        time_created:
          type: integer
          title: Time Created
      type: object
      required:
        - id
        - df_internal_id
        - df_case_number
        - name
        - client_name
        - debtor_company_name
        - debtor_contact_name
        - collector_user_name
        - original_claim_amount_cent
        - total_paid_amount_cent
        - current_balance_due_cent
        - dcri_score
        - sif_threshold_pct
        - sif_timeframe_days
        - sif_additional_params
        - last_work_date
        - next_scheduled_payment_amount_cent
        - next_scheduled_payment_date
        - current_status
        - is_real
      title: DFAccountResponse
    DevMetadata:
      properties:
        input_schema:
          type: object
          title: Input Schema
          default: {}
        output_schema:
          type: object
          title: Output Schema
          default: {}
      type: object
      title: DevMetadata
    EmailAddress:
      properties:
        name:
          type: string
          title: Name
        address:
          type: string
          format: email
          title: Address
      type: object
      required:
        - name
        - address
      title: EmailAddress
    EmailMessageCreate:
      properties:
        conversation_id:
          type: integer
          title: Conversation Id
        inbox_address:
          $ref: '#/components/schemas/EmailAddress'
        from_address:
          $ref: '#/components/schemas/EmailAddress'
        to_addresses:
          items:
            $ref: '#/components/schemas/EmailAddress'
          type: array
          title: To Addresses
          default: []
        cc_addresses:
          items:
            $ref: '#/components/schemas/EmailAddress'
          type: array
          title: Cc Addresses
          default: []
        subject:
          type: string
          title: Subject
        body:
          type: string
          title: Body
        is_edited:
          type: boolean
          title: Is Edited
          default: false
        role:
          $ref: '#/components/schemas/Role'
        raw_gen_message_id:
          type: integer
          title: Raw Gen Message Id
          default: 0
        current_stage_id:
          type: integer
          title: Current Stage Id
        tone:
          type: string
          title: Tone
        parent_email_msg_id:
          type: integer
          title: Parent Email Msg Id
        num_attachments:
          type: integer
          title: Num Attachments
        time_sent:
          type: integer
          title: Time Sent
        external_id:
          type: string
          title: External Id
        body_html:
          type: string
          title: Body Html
        feedback:
          $ref: '#/components/schemas/MessageEditFeedbackModel'
      type: object
      required:
        - conversation_id
        - role
      title: EmailMessageCreate
    EmailMessageResponse:
      properties:
        id:
          type: integer
          title: Id
        conversation_id:
          type: integer
          title: Conversation Id
        inbox_address:
          $ref: '#/components/schemas/EmailAddress'
        from_address:
          $ref: '#/components/schemas/EmailAddress'
        to_addresses:
          items:
            $ref: '#/components/schemas/EmailAddress'
          type: array
          title: To Addresses
        cc_addresses:
          items:
            $ref: '#/components/schemas/EmailAddress'
          type: array
          title: Cc Addresses
        subject:
          type: string
          title: Subject
        body:
          type: string
          title: Body
        is_edited:
          type: boolean
          title: Is Edited
          default: false
        role:
          $ref: '#/components/schemas/Role'
        raw_gen_message_id:
          type: integer
          title: Raw Gen Message Id
          default: 0
        current_stage_id:
          type: integer
          title: Current Stage Id
        tone:
          type: string
          title: Tone
          default: ''
        parent_email_msg_id:
          type: integer
          title: Parent Email Msg Id
          default: 0
        num_attachments:
          type: integer
          title: Num Attachments
          default: 0
        external_id:
          type: string
          title: External Id
          default: ''
        time_sent:
          type: integer
          title: Time Sent
        time_created:
          type: integer
          title: Time Created
        feedback:
          $ref: '#/components/schemas/MessageEditFeedbackModel'
      type: object
      required:
        - id
        - conversation_id
        - subject
        - body
        - role
      title: EmailMessageResponse
    EmailMessageUpdate:
      properties:
        inbox_address:
          $ref: '#/components/schemas/EmailAddress'
        from_address:
          $ref: '#/components/schemas/EmailAddress'
        to_addresses:
          items: {}
          type: array
          title: To Addresses
        cc_addresses:
          items: {}
          type: array
          title: Cc Addresses
        subject:
          type: string
          title: Subject
        body:
          type: string
          title: Body
        is_edited:
          type: boolean
          title: Is Edited
          default: false
        role:
          $ref: '#/components/schemas/Role'
        raw_gen_message_id:
          type: integer
          title: Raw Gen Message Id
        current_stage_id:
          type: integer
          title: Current Stage Id
        tone:
          type: string
          title: Tone
        parent_email_msg_id:
          type: integer
          title: Parent Email Msg Id
        num_attachments:
          type: integer
          title: Num Attachments
        external_id:
          type: string
          title: External Id
        time_sent:
          type: integer
          title: Time Sent
        feedback:
          $ref: '#/components/schemas/MessageEditFeedbackModel'
      type: object
      title: EmailMessageUpdate
    ExecMode:
      type: integer
      enum:
        - 1
        - 2
      title: ExecMode
      description: An enumeration.
    FlowType:
      type: integer
      enum:
        - 1
        - 2
      title: FlowType
      description: An enumeration.
    GenerateSignedUrl:
      properties:
        uri:
          type: string
          title: Uri
        signed_url:
          type: string
          title: Signed Url
      type: object
      required:
        - uri
        - signed_url
      title: GenerateSignedUrl
      description: Model for representing an signed URL and its associated fields.
    GenerateSignedUrlRequest:
      properties:
        uris:
          items:
            type: string
          type: array
          title: Uris
          default: []
      type: object
      title: GenerateSignedUrlRequest
      description: Request model for generating signed URLs.
    GenerateSignedUrlResponse:
      properties:
        signed_urls:
          items:
            $ref: '#/components/schemas/GenerateSignedUrl'
          type: array
          title: Signed Urls
          default: []
      type: object
      title: GenerateSignedUrlResponse
      description: Response model for returning signed Signed URLs.
    GenerateUploadUrl:
      properties:
        source_name:
          type: string
          title: Source Name
        s3_object:
          $ref: '#/components/schemas/TargetS3Object'
        upload_request:
          $ref: '#/components/schemas/UploadToS3Request'
      type: object
      required:
        - source_name
        - s3_object
        - upload_request
      title: GenerateUploadUrl
      description: Model for representing an upload URL and its associated fields.
    GenerateUploadUrlRequest:
      properties:
        files:
          items:
            type: string
          type: array
          title: Files
          default: []
      type: object
      title: GenerateUploadUrlRequest
      description: Request model for generating upload URLs.
    GenerateUploadUrlResponse:
      properties:
        upload_urls:
          items:
            $ref: '#/components/schemas/GenerateUploadUrl'
          type: array
          title: Upload Urls
          default: []
      type: object
      title: GenerateUploadUrlResponse
      description: Response model for returning generated upload URLs.
    GeneratedMessageCreate:
      properties:
        conversation_id:
          type: integer
          title: Conversation Id
          default: 0
        type:
          allOf:
            - $ref: '#/components/schemas/GeneratedMessageType'
          default: 1
        body:
          type: string
          title: Body
        tone:
          type: string
          title: Tone
        do_regenerate:
          type: boolean
          title: Do Regenerate
          default: false
        custom_workflow:
          type: string
          title: Custom Workflow
        partial_span:
          $ref: '#/components/schemas/PartialMessageSpan'
        partial_ref_message_id:
          type: integer
          title: Partial Ref Message Id
        test_only:
          type: boolean
          title: Test Only
          default: false
        trigger_src:
          allOf:
            - $ref: '#/components/schemas/GeneratedMessageTriggerSource'
          default: 0
        feedback:
          $ref: '#/components/schemas/MessageEditFeedbackModel'
      type: object
      title: GeneratedMessageCreate
    GeneratedMessageResponse:
      properties:
        id:
          type: integer
          title: Id
        conversation_id:
          type: integer
          title: Conversation Id
        user_id:
          type: integer
          title: User Id
        body:
          type: string
          title: Body
        current_stage_id:
          type: integer
          title: Current Stage Id
        prompt_content:
          type: string
          title: Prompt Content
        dev_info:
          type: object
          title: Dev Info
        tone:
          type: string
          title: Tone
        type:
          $ref: '#/components/schemas/GeneratedMessageType'
        trigger_src:
          $ref: '#/components/schemas/GeneratedMessageTriggerSource'
        channel_type:
          $ref: '#/components/schemas/ChannelType'
        time_created:
          type: integer
          title: Time Created
        feedback:
          $ref: '#/components/schemas/MessageEditFeedbackModel'
      type: object
      required:
        - id
        - conversation_id
        - user_id
        - body
        - current_stage_id
        - dev_info
        - tone
        - type
        - trigger_src
        - channel_type
      title: GeneratedMessageResponse
    GeneratedMessageTriggerSource:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      title: GeneratedMessageTriggerSource
      description: An enumeration.
    GeneratedMessageType:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
      title: GeneratedMessageType
      description: An enumeration.
    GeneratedMessageUpdate:
      properties:
        message_id:
          type: integer
          title: Message Id
        type:
          allOf:
            - $ref: '#/components/schemas/GeneratedMessageType'
          default: 1
        body:
          type: string
          title: Body
        tone:
          type: string
          title: Tone
        feedback:
          $ref: '#/components/schemas/MessageEditFeedbackModel'
      type: object
      required:
        - message_id
      title: GeneratedMessageUpdate
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HealthCheckResponse:
      properties:
        status:
          type: string
          title: Status
          default: OK
      type: object
      title: HealthCheckResponse
      description: Response model to validate and return when performing a health check.
    LambdaOcrDocumentRequest:
      properties:
        uri:
          type: string
          title: Uri
        cache:
          type: boolean
          title: Cache
          default: false
      type: object
      required:
        - uri
      title: LambdaOcrDocumentRequest
    LambdaOcrDocumentResponse:
      properties:
        pages:
          items:
            type: string
          type: array
          title: Pages
          default: []
      type: object
      title: LambdaOcrDocumentResponse
    MessageCreate:
      properties:
        conversation_id:
          type: integer
          title: Conversation Id
        body:
          type: string
          title: Body
        is_edited:
          type: boolean
          title: Is Edited
          default: false
        role:
          $ref: '#/components/schemas/Role'
        raw_gen_message_id:
          type: integer
          title: Raw Gen Message Id
          default: 0
        time_sent:
          type: integer
          title: Time Sent
        external_id:
          type: string
          title: External Id
          default: ''
        feedback:
          $ref: '#/components/schemas/MessageEditFeedbackModel'
      type: object
      required:
        - conversation_id
        - role
      title: MessageCreate
    MessageEditFeedbackModel:
      properties:
        feedback:
          type: string
          title: Feedback
      type: object
      title: MessageEditFeedbackModel
    MessageResponse:
      properties:
        id:
          type: integer
          title: Id
        conversation_id:
          type: integer
          title: Conversation Id
        body:
          type: string
          title: Body
        current_stage_id:
          type: integer
          title: Current Stage Id
        role:
          $ref: '#/components/schemas/Role'
        is_edited:
          type: boolean
          title: Is Edited
          default: false
        raw_gen_message_id:
          type: integer
          title: Raw Gen Message Id
          default: 0
        external_id:
          type: string
          title: External Id
          default: ''
        time_sent:
          type: integer
          title: Time Sent
        time_created:
          type: integer
          title: Time Created
        feedback:
          $ref: '#/components/schemas/MessageEditFeedbackModel'
      type: object
      required:
        - id
        - conversation_id
        - body
        - current_stage_id
        - role
      title: MessageResponse
    MessageUpdate:
      properties:
        body:
          type: string
          title: Body
        is_edited:
          type: boolean
          title: Is Edited
          default: false
        time_sent:
          type: integer
          title: Time Sent
        external_id:
          type: string
          title: External Id
        feedback:
          $ref: '#/components/schemas/MessageEditFeedbackModel'
      type: object
      title: MessageUpdate
    ModelSelectorResponse:
      properties:
        model_name:
          type: string
          title: Model Name
        id:
          type: integer
          title: Id
      type: object
      required:
        - model_name
        - id
      title: ModelSelectorResponse
    NonStagePromptResponse:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        ver:
          type: integer
          title: Ver
        type:
          $ref: '#/components/schemas/PromptType'
        time_created:
          type: integer
          title: Time Created
      type: object
      required:
        - id
        - name
        - ver
        - type
      title: NonStagePromptResponse
    OcrDocumentMode:
      type: string
      enum:
        - regular
        - saris
      title: OcrDocumentMode
      description: An enumeration.
    OcrDocumentResponse:
      properties:
        mode:
          $ref: '#/components/schemas/OcrDocumentMode'
        file_size:
          type: integer
          title: File Size
        filename:
          type: string
          title: Filename
        extension:
          type: string
          title: Extension
        execution_time:
          type: number
          title: Execution Time
        should_convert_for_ocr:
          type: boolean
          title: Should Convert For Ocr
        pages:
          items:
            type: object
          type: array
          title: Pages
      type: object
      required:
        - mode
        - file_size
        - filename
        - extension
        - execution_time
        - should_convert_for_ocr
        - pages
      title: OcrDocumentResponse
    PartialMessageSpan:
      properties:
        start:
          type: integer
          title: Start
        end:
          type: integer
          title: End
      type: object
      required:
        - start
        - end
      title: PartialMessageSpan
    PromptBlock:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        ver:
          type: integer
          title: Ver
        rank:
          type: integer
          title: Rank
        is_conditional:
          type: boolean
          title: Is Conditional
          default: false
      type: object
      required:
        - id
        - name
        - ver
        - rank
      title: PromptBlock
    PromptCreate:
      properties:
        name:
          type: string
          title: Name
        body:
          type: string
          title: Body
        data:
          type: object
          title: Data
        ver:
          type: integer
          title: Ver
        type:
          allOf:
            - $ref: '#/components/schemas/PromptType'
          default: 0
      type: object
      required:
        - name
        - body
      title: PromptCreate
    PromptResponse:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        ver:
          type: integer
          title: Ver
        body:
          type: string
          title: Body
        data:
          type: object
          title: Data
        dynamic_slot_data:
          type: object
          title: Dynamic Slot Data
        type:
          $ref: '#/components/schemas/PromptType'
        time_created:
          type: integer
          title: Time Created
      type: object
      required:
        - id
        - name
        - ver
        - body
        - data
        - type
      title: PromptResponse
    PromptType:
      type: integer
      enum:
        - 0
        - 1
      title: PromptType
      description: An enumeration.
    ProvidersDocumentRequest:
      properties:
        uris:
          items:
            type: string
          type: array
          title: Uris
        merchant_name:
          type: string
          title: Merchant Name
        value:
          type: string
          title: Value
        client_name:
          type: string
          title: Client Name
        df_case_number:
          type: string
          title: Df Case Number
        merchant_address:
          type: string
          title: Merchant Address
        cache:
          type: boolean
          title: Cache
          default: false
      type: object
      required:
        - uris
        - merchant_name
        - value
        - client_name
        - df_case_number
        - merchant_address
      title: ProvidersDocumentRequest
    ProvidersDocumentResponse:
      properties:
        providers:
          title: Providers
        provider_file:
          $ref: '#/components/schemas/TargetS3Object'
        cover_letters:
          items:
            $ref: '#/components/schemas/TargetS3Object'
          type: array
          title: Cover Letters
        certificate_of_authority:
          $ref: '#/components/schemas/TargetS3Object'
      type: object
      required:
        - provider_file
        - cover_letters
        - certificate_of_authority
      title: ProvidersDocumentResponse
    Role:
      enum:
        - user
        - bot
      title: Role
      description: An enumeration.
    StageCreate:
      properties:
        name:
          type: string
          title: Name
        label:
          type: string
          title: Label
        is_selectable:
          type: boolean
          title: Is Selectable
        ver:
          type: integer
          title: Ver
        return_schema:
          type: object
          title: Return Schema
        next_steps:
          items:
            type: integer
          type: array
          title: Next Steps
        type:
          $ref: '#/components/schemas/Type'
        dev_metadata:
          $ref: '#/components/schemas/DevMetadata'
        time_created:
          type: integer
          title: Time Created
      type: object
      required:
        - name
        - label
        - is_selectable
        - ver
        - return_schema
        - next_steps
        - type
        - dev_metadata
      title: StageCreate
    StageData:
      properties:
        prompt:
          items:
            $ref: '#/components/schemas/PromptBlock'
          type: array
          title: Prompt
        next_step:
          items:
            type: integer
          type: array
          title: Next Step
        button:
          items:
            $ref: '#/components/schemas/PromptBlock'
          type: array
          title: Button
      type: object
      required:
        - next_step
      title: StageData
    StageLabelResponse:
      properties:
        id:
          type: integer
          title: Id
        label:
          type: string
          title: Label
      type: object
      required:
        - id
        - label
      title: StageLabelResponse
    StageResponse:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        label:
          type: string
          title: Label
        is_selectable:
          type: boolean
          title: Is Selectable
        ver:
          type: integer
          title: Ver
        return_schema:
          type: object
          title: Return Schema
        next_steps:
          items:
            type: integer
          type: array
          title: Next Steps
        type:
          allOf:
            - $ref: '#/components/schemas/Type'
          default: 0
        dev_metadata:
          $ref: '#/components/schemas/DevMetadata'
        time_created:
          type: integer
          title: Time Created
      type: object
      required:
        - id
        - name
        - label
        - is_selectable
        - ver
        - return_schema
        - next_steps
      title: StageResponse
    StageUpdate:
      properties:
        label:
          type: string
          title: Label
        is_selectable:
          type: boolean
          title: Is Selectable
        ver:
          type: integer
          title: Ver
        return_schema:
          type: object
          title: Return Schema
        next_steps:
          items:
            type: integer
          type: array
          title: Next Steps
        type:
          $ref: '#/components/schemas/Type'
        dev_metadata:
          $ref: '#/components/schemas/DevMetadata'
      type: object
      title: StageUpdate
    Status:
      type: integer
      enum:
        - -1
        - 0
        - 1
        - 2
      title: Status
      description: An enumeration.
    TargetS3Object:
      properties:
        uri:
          type: string
          title: Uri
        bucket_name:
          type: string
          title: Bucket Name
        object_key:
          type: string
          title: Object Key
      type: object
      required:
        - uri
        - bucket_name
        - object_key
      title: TargetS3Object
    TaskCreate:
      properties:
        flow_id:
          type: integer
          title: Flow Id
        input_metadata:
          type: object
          title: Input Metadata
          default: {}
      type: object
      required:
        - flow_id
      title: TaskCreate
    TaskCurrentStageInfo:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
      type: object
      required:
        - id
        - name
      title: TaskCurrentStageInfo
    TaskDevMetadata:
      properties:
        num_input_tokens_used:
          type: integer
          title: Num Input Tokens Used
        num_output_tokens_used:
          type: integer
          title: Num Output Tokens Used
      type: object
      title: TaskDevMetadata
    TaskExecutionLogResponse:
      properties:
        id:
          type: integer
          title: Id
        task_id:
          type: integer
          title: Task Id
        stage_info:
          $ref: '#/components/schemas/TaskCurrentStageInfo'
        status:
          $ref: '#/components/schemas/Status'
        output_metadata:
          type: object
          title: Output Metadata
          default: {}
        processing_time_start:
          type: string
          format: date-time
          title: Processing Time Start
        processing_time_end:
          type: string
          format: date-time
          title: Processing Time End
      type: object
      required:
        - id
        - task_id
        - stage_info
        - status
        - processing_time_start
        - processing_time_end
      title: TaskExecutionLogResponse
    TaskResponse:
      properties:
        id:
          type: integer
          title: Id
        user_id:
          type: integer
          title: User Id
        flow_id:
          type: integer
          title: Flow Id
        current_stage_info:
          $ref: '#/components/schemas/TaskCurrentStageInfo'
        current_status:
          $ref: '#/components/schemas/Status'
        input_metadata:
          type: object
          title: Input Metadata
          default: {}
        output_metadata:
          type: object
          title: Output Metadata
          default: {}
        dev_metadata:
          $ref: '#/components/schemas/TaskDevMetadata'
        last_stage_response:
          $ref: '#/components/schemas/TaskExecutionLogResponse'
        time_created:
          type: integer
          title: Time Created
        time_last_updated:
          type: integer
          title: Time Last Updated
      type: object
      required:
        - id
        - user_id
        - flow_id
        - current_stage_info
        - current_status
      title: TaskResponse
    TestGeneratedMessageResponse:
      properties:
        prompt_content:
          type: string
          title: Prompt Content
        current_stage_id:
          type: integer
          title: Current Stage Id
      type: object
      required:
        - prompt_content
        - current_stage_id
      title: TestGeneratedMessageResponse
    TransitionReason:
      type: string
      enum:
        - bot_transition
        - manual_transition
        - init_transition
        - status_integration_transition
      title: TransitionReason
      description: An enumeration.
    Type:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
      title: Type
      description: An enumeration.
    UCCDocumentType:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
      title: UCCDocumentType
      description: An enumeration.
    UCCProviderResponse:
      properties:
        providers:
          items: {}
          type: array
          title: Providers
        file:
          title: File
        cover_letters:
          items: {}
          type: array
          title: Cover Letters
        certificate_of_authority_uri:
          type: string
          title: Certificate Of Authority Uri
      type: object
      required:
        - providers
        - cover_letters
        - certificate_of_authority_uri
      title: UCCProviderResponse
    UCCResponse:
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/UCCDocumentType'
          default: 1
        metadata:
          title: Metadata
        sensitive_data:
          title: Sensitive Data
        filename:
          type: string
          title: Filename
        file:
          type: string
          title: File
        status:
          type: string
          title: Status
          default: success
        df_account_id:
          type: integer
          title: Df Account Id
      type: object
      title: UCCResponse
    UccDocumentRequest:
      properties:
        uri:
          type: string
          title: Uri
        cache:
          type: boolean
          title: Cache
          default: false
        convert:
          type: boolean
          title: Convert
      type: object
      required:
        - uri
      title: UccDocumentRequest
    UccDocumentResponse:
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/UCCDocumentType'
          default: 1
        metadata:
          title: Metadata
        sensitive_data:
          title: Sensitive Data
        uri:
          type: string
          title: Uri
        status:
          type: string
          enum:
            - success
          title: Status
          default: success
        df_account_id:
          type: integer
          title: Df Account Id
        ocr:
          title: Ocr
        structured_pages:
          title: Structured Pages
      type: object
      title: UccDocumentResponse
    UploadToS3Request:
      properties:
        url:
          type: string
          title: Url
        fields:
          $ref: '#/components/schemas/CreatePresignedPostFieldsResponse'
      type: object
      required:
        - url
        - fields
      title: UploadToS3Request
    User:
      properties:
        email:
          type: string
          format: email
          title: Email
        access_level:
          allOf:
            - $ref: '#/components/schemas/AccessLevel'
          default: 0
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        phone_number:
          type: string
          title: Phone Number
        customer_id:
          type: integer
          title: Customer Id
      type: object
      required:
        - email
        - id
        - name
        - phone_number
        - customer_id
      title: User
    UserCreate:
      properties:
        email:
          type: string
          format: email
          title: Email
        access_level:
          allOf:
            - $ref: '#/components/schemas/AccessLevel'
          default: 0
        name:
          type: string
          title: Name
        phone_number:
          type: string
          title: Phone Number
        password:
          type: string
          title: Password
      type: object
      required:
        - email
        - name
        - phone_number
        - password
      title: UserCreate
    UserSetPasswordWithToken:
      properties:
        token:
          type: string
          title: Token
        new_password:
          type: string
          title: New Password
      type: object
      required:
        - token
        - new_password
      title: UserSetPasswordWithToken
    UserUpdate:
      properties:
        name:
          type: string
          title: Name
        phone_number:
          type: string
          title: Phone Number
        current_password:
          type: string
          title: Current Password
        new_password:
          type: string
          title: New Password
      type: object
      title: UserUpdate
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: /api/auth/login
